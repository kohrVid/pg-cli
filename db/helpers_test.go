package db

import (
	"bytes"
	"fmt"

	"github.com/spf13/viper"
)

type Cat struct {
	Id     int    `json:"id"`
	Name   string `json:"name"`
	Age    int    `json:"age"`
	Colour string `json:"colour"`
}

var cat1 Cat = Cat{
	Id:     1,
	Name:   "QT",
	Age:    4,
	Colour: "Tabby and white",
}

var confYaml []byte = []byte(
	fmt.Sprintf(`
default: &default
  database_user: pgcli_user
test:
  <<: *default
  database_name: pgcli_test
  data:
    cats:
      - name: %v
        age: %v
        colour: %v`,
		cat1.Name,
		cat1.Age,
		cat1.Colour,
	))

func testInit(confYaml []byte) map[string]interface{} {
	viper.SetConfigType("yaml")
	viper.ReadConfig(bytes.NewBuffer(confYaml))
	return viper.Get("test").(map[string]interface{})
}

func migrationHelper(conf map[string]interface{}) {
	conn := DBConnect(conf)
	defer conn.Close()

	_, err := conn.Exec(`CREATE TABLE cats (
  id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name VARCHAR(255),
  age INT,
  colour VARCHAR(255)
);`)
	if err != nil {
		panic(err)
	}
}
